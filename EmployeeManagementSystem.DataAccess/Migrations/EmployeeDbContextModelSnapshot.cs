// <auto-generated />
using System;
using EmployeeManagementSystem.DataAccess.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeManagementSystem.DataAccess.Migrations
{
    [DbContext(typeof(EmployeeDbContext))]
    partial class EmployeeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("EmployeeManagementSystem.Entity.Concrete.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<DateTime>("ISCREATEDDATE")
                        .HasColumnType("TEXT");

                    b.Property<int>("ISCREATEDUSERID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ISMODIFIEDDATE")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ISMODIFIEDUSERID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<bool>("isActive")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("EmployeeManagementSystem.Entity.Concrete.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DepartmentId");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Email");

                    b.Property<DateTime>("ISCREATEDDATE")
                        .HasColumnType("TEXT");

                    b.Property<int>("ISCREATEDUSERID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ISMODIFIEDDATE")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ISMODIFIEDUSERID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT")
                        .HasColumnName("Password");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Phone");

                    b.Property<double>("Salary")
                        .HasMaxLength(100)
                        .HasColumnType("REAL")
                        .HasColumnName("Salary");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Surname");

                    b.Property<bool>("isActive")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EmployeeManagementSystem.Entity.Concrete.EmployeePayment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<double>("Amount")
                        .HasMaxLength(100)
                        .HasColumnType("REAL")
                        .HasColumnName("Amount");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("EmployeeID");

                    b.Property<DateTime>("ISCREATEDDATE")
                        .HasColumnType("TEXT");

                    b.Property<int>("ISCREATEDUSERID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ISMODIFIEDDATE")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ISMODIFIEDUSERID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isActive")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeePayments");
                });

            modelBuilder.Entity("EmployeeManagementSystem.Entity.Concrete.Employee", b =>
                {
                    b.HasOne("EmployeeManagementSystem.Entity.Concrete.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EmployeeManagementSystem.Entity.Concrete.EmployeePayment", b =>
                {
                    b.HasOne("EmployeeManagementSystem.Entity.Concrete.Employee", "Employee")
                        .WithMany("EmployeePayments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmployeeManagementSystem.Entity.Concrete.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EmployeeManagementSystem.Entity.Concrete.Employee", b =>
                {
                    b.Navigation("EmployeePayments");
                });
#pragma warning restore 612, 618
        }
    }
}
